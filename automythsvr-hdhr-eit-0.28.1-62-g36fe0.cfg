lang en_US.UTF-8
keyboard us
timezone --utc America/New_York 
auth --useshadow --enablemd5
selinux --permissive
firewall --enabled
xconfig --startxonboot
part / --size 7700 --fstype ext4 
services --disabled=sshd --enabled=network,NetworkManager
network --device=bond0 --bondslaves=eth0,eth1,eth2,eth3 --bootproto=dhcp --hostname=automythsvr-g36fe0ce --activate
firstboot --disable
bootloader --location=mbr --append="bond"

rootpw --iscrypted $6$NN/D90yyBK7mKxXS$YDKEQ70otYd46WvwY.QcFpu5b8j3uiXOykTRUv/Jh6cvGXqU7NSG29VaaKaFVG.EcqBQJMVuUIPv1jExpsOEO0

#repo --name=base --baseurl=http://www.gtlib.gatech.edu/pub/scientific/7.4/x86_64/os/
#url --url="http://www.gtlib.gatech.edu/pub/scientific/7.4/x86_64/os/"

repo --name=base --baseurl=http://192.168.1.212/pub/scientific/7.4/x86_64/os
url --url="http://192.168.1.212/pub/scientific/7.4/x86_64/os"


repo --name=security --baseurl=http://192.168.1.212/pub/scientific/7.4/x86_64/updates/security/ --excludepkgs=grubby
url --url="http://192.168.1.212/pub/scientific/7.4/x86_64/updates/security"

repo --name=fedora-epel --baseurl=http://192.168.1.212/pub/fedora-epel/7/x86_64
url --url="http://192.168.1.212/pub/fedora-epel/7/x86_64"

#repo --name=fedora-epel --baseurl=http://mirror.cs.princeton.edu/pub/mirrors/fedora-epel/7/x86_64
#url --url="http://mirror.cs.princeton.edu/pub/mirrors/fedora-epel/7/x86_64"

#repo --name=elrepo-kernel --baseurl=http://dfw.mirror.rackspace.com/elrepo/kernel/el7/x86_64/
#url --url="http://dfw.mirror.rackspace.com/elrepo/kernel/el7/x86_64/"

repo --name=elrepo-kernel --baseurl=http://192.168.1.212/pub/elrepo/kernel/el7/x86_64
url --url="http://192.168.1.212/pub/elrepo/kernel/el7/x86_64"

repo --name=rpmfusion --baseurl=http://192.168.1.212/pub/rpmfusion/free/el/updates/7/x86_64/
url --url="http://192.168.1.212/pub/rpmfusion/free/el/updates/7/x86_64/"

#repo --name=rpmfusion --baseurl=http://download1.rpmfusion.org/free/el/updates/7/x86_64/
#url --url="http://download1.rpmfusion.org/free/el/updates/7/x86_64/"


repo --name=automyth-server-repo --baseurl=http://127.0.0.1/AutoMyth-Server-7.4/automyth_repo/Server
url --url="http://127.0.0.1/AutoMyth-Server-7.4/automyth_repo/Server"

# Workaround for the grubby issue on live media (see https://bugzilla.redhat.com/show_bug.cgi?id=1153410)
# SL repositories (fastbugs enabled per default) 
#repo --name=security  --baseurl=http://ftp.scientificlinux.org/linux/scientific/7.4/$basearch/updates/security/ --excludepkgs=grubby


%packages 
@core
-postfix
@x11

kernel-lt

alsa-plugins-oss
alsa-tools
chromium
google-droid-sans-mono-fonts
dejavu-sans-fonts
easy-rsa
ffmpeg
gnome-disk-utility
gparted
hostapd-logwatch
httpd
hdhomerun
icewm
liberation-mono-fonts
lightdm
lumina-xconfig
mariadb-server
motion
mplayer
mysqltuner
mytop
net-tools
nmap
ntp
ntpdate
NetworkManager-bluetooth
openvpn
patch
phpMyAdmin
php
pulseaudio-module-bluetooth
redhat-menus
scite
screen
selinux-policy-minimum
setools
policycoreutils-restorecond
system-storage-manager
system-config-date
system-config-language
system-config-keyboard
system-config-printer
system-config-users
v4l-utils
vim
vlc
xfce4-power-manager
xfce4-terminal
xfce4-mixer
network-manager-applet
Thunar
wget
lumina-xconfig


##automyth 
anaconda
automythsvr-firewalld-cmds
automythsvr-filesystem
automythsvr-eit-stages
conky
dtv-scan-tables
dvb-apps
dvbsnoop
hfsplus-tools
pnmixer
menumaker

mythtv-backend
mythtv-docs
mythtv-frontend
###mythtv-plugins
mytharchive
mythmusic
##mythweb not built yet
mythzoneminder
#xfce-bluetooth

##repos
elrepo-release
epel-release
rpmfusion-free-release

syslinux-extlinux
## for UEFI/Secureboot support
## extra ia32 for the 32bit bios/64bit cpu machines
efibootmgr
grub2
grub2-tools
grub2-tools-extra
grub2-efi-ia32-cdboot
grub2-efi-x64-cdboot
grub2-efi-ia32
grub2-efi-x64
shim-ia32
shim-unsigned-ia32
shim-x64
shim-unsigned-x64

-yum-cron
-initial-setup-gui
-initial-setup
%end

%post 

# FIXME: it'd be better to get this installed from a package
cat > /etc/rc.d/init.d/livesys << EOFLIVESYS1
#!/bin/bash
#
# live: Init script for live image
#
# chkconfig: 345 00 99
# description: Init script for live image.
### BEGIN INIT INFO
# X-Start-Before: display-manager
### END INIT INFO

. /etc/init.d/functions

if ! strstr "\`cat /proc/cmdline\`" rd.live.image || [ "\$1" != "start" ]; then
    exit 0
fi

if [ -e /.liveimg-configured ] ; then
    configdone=1
fi

exists() {
    which \$1 >/dev/null 2>&1 || return
    \$*
}

# Make sure we don't mangle the hardware clock on shutdown
ln -sf /dev/null /etc/systemd/system/hwclock-save.service

livedir="LiveOS"
for arg in \`cat /proc/cmdline\` ; do
  if [ "\${arg##rd.live.dir=}" != "\${arg}" ]; then
    livedir=\${arg##rd.live.dir=}
    return
  fi
  if [ "\${arg##live_dir=}" != "\${arg}" ]; then
    livedir=\${arg##live_dir=}
    return
  fi
done

# enable swaps unless requested otherwise
swaps=\`blkid -t TYPE=swap -o device\`
if ! strstr "\`cat /proc/cmdline\`" noswap && [ -n "\$swaps" ] ; then
  for s in \$swaps ; do
    action "Enabling swap partition \$s" swapon \$s
  done
fi
if ! strstr "\`cat /proc/cmdline\`" noswap && [ -f /run/initramfs/live/\${livedir}/swap.img ] ; then
  action "Enabling swap file" swapon /run/initramfs/live/\${livedir}/swap.img
fi

mountPersistentHome() {
  # support label/uuid
  if [ "\${homedev##LABEL=}" != "\${homedev}" -o "\${homedev##UUID=}" != "\${homedev}" ]; then
    homedev=\`/sbin/blkid -o device -t "\$homedev"\`
  fi

  # if we're given a file rather than a blockdev, loopback it
  if [ "\${homedev##mtd}" != "\${homedev}" ]; then
    # mtd devs don't have a block device but get magic-mounted with -t jffs2
    mountopts="-t jffs2"
  elif [ ! -b "\$homedev" ]; then
    loopdev=\`losetup -f\`
    if [ "\${homedev##/run/initramfs/live}" != "\${homedev}" ]; then
      action "Remounting live store r/w" mount -o remount,rw /run/initramfs/live
    fi
    losetup \$loopdev \$homedev
    homedev=\$loopdev
  fi

  # if it's encrypted, we need to unlock it
  if [ "\$(/sbin/blkid -s TYPE -o value \$homedev 2>/dev/null)" = "crypto_LUKS" ]; then
    echo
    echo "Setting up encrypted /home device"
    plymouth ask-for-password --command="cryptsetup luksOpen \$homedev EncHome"
    homedev=/dev/mapper/EncHome
  fi

  # and finally do the mount
  mount \$mountopts \$homedev /home
  # if we have /home under what's passed for persistent home, then
  # we should make that the real /home.  useful for mtd device on olpc
  if [ -d /home/home ]; then mount --bind /home/home /home ; fi
  [ -x /sbin/restorecon ] && /sbin/restorecon /home
  if [ -d /home/mythtv ]; then USERADDARGS="-M" ; fi
}

findPersistentHome() {
  for arg in \`cat /proc/cmdline\` ; do
    if [ "\${arg##persistenthome=}" != "\${arg}" ]; then
      homedev=\${arg##persistenthome=}
      return
    fi
  done
}

if strstr "\`cat /proc/cmdline\`" persistenthome= ; then
  findPersistentHome
elif [ -e /run/initramfs/live/\${livedir}/home.img ]; then
  homedev=/run/initramfs/live/\${livedir}/home.img
fi

# if we have a persistent /home, then we want to go ahead and mount it
if ! strstr "\`cat /proc/cmdline\`" nopersistenthome && [ -n "\$homedev" ] ; then
  action "Mounting persistent /home" mountPersistentHome
fi

# make it so that we don't do writing to the overlay for things which
# are just tmpdirs/caches
mount -t tmpfs -o mode=0755 varcacheyum /var/cache/yum
mount -t tmpfs vartmp /var/tmp
[ -x /sbin/restorecon ] && /sbin/restorecon /var/cache/yum /var/tmp >/dev/null 2>&1

if [ -n "\$configdone" ]; then
  exit 0
fi

# add live user with no passwd
action "Adding live user" useradd \$USERADDARGS -c "mythtv" mythtv
passwd -d mythtv > /dev/null
usermod -aG wheel mythtv > /dev/null
usermod -d /home/mythtv -s /bin/bash mythtv > /dev/null
grep mythtv /etc/passwd > /dev/null
usermod -c "mythtv" mythtv > /dev/null

# Remove root password lock
passwd -d root > /dev/null

# turn off firstboot for livecd boots
systemctl --no-reload disable firstboot-text.service 2> /dev/null || :
systemctl --no-reload disable firstboot-graphical.service 2> /dev/null || :
systemctl stop firstboot-text.service 2> /dev/null || :
systemctl stop firstboot-graphical.service 2> /dev/null || :

# don't use prelink on a running live image
sed -i 's/PRELINKING=yes/PRELINKING=no/' /etc/sysconfig/prelink &>/dev/null || :

# turn off mdmonitor by default
systemctl --no-reload disable mdmonitor.service 2> /dev/null || :
systemctl --no-reload disable mdmonitor-takeover.service 2> /dev/null || :
systemctl stop mdmonitor.service 2> /dev/null || :
systemctl stop mdmonitor-takeover.service 2> /dev/null || :

# don't enable the gnome-settings-daemon packagekit plugin
echo -e "\ngsettings set org.gnome.settings-daemon.plugins.updates active 'false' &>/dev/null || :" >> /home/mythtv/.bashrc

# don't start cron/at as they tend to spawn things which are
# disk intensive that are painful on a live image
systemctl --no-reload disable crond.service 2> /dev/null || :
systemctl --no-reload disable atd.service 2> /dev/null || :
systemctl stop crond.service 2> /dev/null || :
systemctl stop atd.service 2> /dev/null || :

# turn off libvirtd by default
systemctl --no-reload disable libvirtd.service 2> /dev/null || :
systemctl stop libvirtd.service 2> /dev/null || :

# turn of gdm and turn on lightdm
systemctl --no-reload disable gdm.service 2> /dev/null || :
systemctl stop gdm.service  2> /dev/null || :
systemctl --no-reload enable lightdm.service 2> /dev/null || :

# set default session, otherwise login will fail
sed -i 's/^#user-session=.*/user-session=icewm/' /etc/lightdm/lightdm.conf

# and hack so that we eject the cd on shutdown if we're using a CD...
if strstr "\`cat /proc/cmdline\`" CDLABEL= ; then
  cat >> /sbin/halt.local << FOE
#!/bin/bash
# XXX: This often gets stuck during shutdown because /etc/init.d/halt
#      (or something else still running) wants to read files from the block\
#      device that was ejected.  Disable for now.  Bug #531924
# we want to eject the cd on halt, but let's also try to avoid
# io errors due to not being able to get files...
#cat /sbin/halt > /dev/null
#cat /sbin/reboot > /dev/null
#/usr/sbin/eject -p -m \$(readlink -f /run/initramfs/livedev) >/dev/null 2>&1
#echo "Please remove the CD from your drive and press Enter to finish restarting"
#read -t 30 < /dev/console
FOE
chmod +x /sbin/halt.local
fi


# disable kdump service
systemctl --no-reload disable kdump.service 2> /dev/null || :
systemctl stop kdump.service 2> /dev/null || :

# disable tuned.service
systemctl --no-reload disable tuned.service 2> /dev/null || :
systemctl stop tuned.service 2> /dev/null || :

# Mark things as configured
touch /.liveimg-configured

# add static hostname to work around xauth bug
# https://bugzilla.redhat.com/show_bug.cgi?id=679486

#echo "automythsvr-g36fe0ce" >>/etc/hostname



# Fixing the lang install issue when other lang than English is selected . See http://bugs.centos.org/view.php?id=7217
/usr/bin/cp /usr/lib/python2.7/site-packages/blivet/size.py /usr/lib/python2.7/site-packages/blivet/size.py.orig
/usr/bin/sed -i "s#return self.humanReadable()#return self.humanReadable().encode('utf-8')#g" /usr/lib/python2.7/site-packages/blivet/size.py

EOFLIVESYS1

# bah, hal starts way too late
cat > /etc/rc.d/init.d/livesys-late << EOFLIVESYSLATE
#!/bin/bash
#
# live: Late init script for live image
#
# chkconfig: 345 99 01
# description: Late init script for live image.

. /etc/init.d/functions

if ! strstr "\`cat /proc/cmdline\`" rd.live.image || [ "\$1" != "start" ] || [ -e /.liveimg-late-configured ] ; then
    exit 0
fi

exists() {
    which \$1 >/dev/null 2>&1 || return
    \$*
}

touch /.liveimg-late-configured

# read some variables out of /proc/cmdline
for o in \`cat /proc/cmdline\` ; do
    case \$o in
    ks=*)
        ks="--kickstart=\${o#ks=}"
        ;;
    xdriver=*)
        xdriver="\${o#xdriver=}"
        ;;
    esac
done

# if liveinst or textinst is given, start anaconda
if strstr "\`cat /proc/cmdline\`" liveinst ; then
   plymouth --quit
   /usr/sbin/liveinst \$ks
fi
if strstr "\`cat /proc/cmdline\`" textinst ; then
   plymouth --quit
   /usr/sbin/liveinst --text \$ks
fi

# configure X, allowing user to override xdriver
if [ -n "\$xdriver" ]; then
   cat > /etc/X11/xorg.conf.d/00-xdriver.conf <<FOE-XOVERRIDE-LIVESYS-LATE
Section "Device"
	Identifier	"Videocard0"
	Driver	"\$xdriver"
EndSection
FOE-XOVERRIDE-LIVESYS-LATE
fi

EOFLIVESYSLATE

chmod 755 /etc/rc.d/init.d/livesys
/sbin/restorecon /etc/rc.d/init.d/livesys
/sbin/chkconfig --add livesys

chmod 755 /etc/rc.d/init.d/livesys-late
/sbin/restorecon /etc/rc.d/init.d/livesys-late
/sbin/chkconfig --add livesys-late

# enable tmpfs for /tmp
systemctl enable tmp.mount

# work around for poor key import UI in PackageKit
rm -f /var/lib/rpm/__db*
releasever=$(rpm -q --qf '%{version}\n' --whatprovides system-release)
basearch=$(uname -i)
rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-*
echo "Packages within this LiveCD (with version)"
rpm -qa | sort 
echo "Packages within this LiveCD"
rpm -qa --qf "%{name}\n" | sort
# Note that running rpm recreates the rpm db files which aren't needed or wanted
rm -f /var/lib/rpm/__db*

# go ahead and pre-make the man -k cache (#455968)
/usr/bin/mandb

# save a little bit of space at least...
rm -f /boot/initramfs*
# make sure there aren't core files lying around
rm -f /core*

cat >> /etc/rc.d/init.d/livesys << EOFLIVESYS2




#copy conky config over to mythtv
#other users have it installed on account creation 
cp -avf /etc/skel/.conkyrc /home/mythtv/
chown mythtv. /home/mythtv/.conkyrc

#have liveinst show up in mmakers menus
sed -i 's|NoDisplay=true|NoDisplay=false|' /usr/share/applications/liveinst.desktop

#test setting wpa in live image
echo "wpa_password=`cat /etc/machine-id|cut -c1-20`">>/etc/hostapd/hostapd.conf

#enable db service
systemctl enable mariadb.service 2> /dev/null || :
systemctl start mariadb.service 2> /dev/null || :


#add net.devices file for references
ls /sys/class/net/|sed '/lo/d' > /home/mythtv/net.devices
#add top device with ifconfig info
ifconfig \$(cat /home/mythtv/net.devices|head -n1) > /home/mythtv/net.devices.topdevice.details.escaped
ifconfig `cat /home/mythtv/net.devices |head -n1` > /home/mythtv/net.devices.topdevice.details.direct.cmd.sub.backticks


cat > /home/mythtv/.xinitrc << FOE-ICEWM-XINITRC-LIVESYS2
exec icewm-session
FOE-ICEWM-XINITRC-LIVESYS2


# make sure to set the right permissions and selinux contexts
chmod +x /home/mythtv/.xinitrc
chown -R mythtv:mythtv /home/mythtv/
/sbin/restorecon -R /home/mythtv/
/sbin/restorecon -R /mythtv

#localectl set-keymap us
#localectl set-x11-keymap us
EOFLIVESYS2

#systemctl --no-reload disable firewalld.service 2> /dev/null || :
#systemctl stop firewalld.service  2> /dev/null || :


# rebuild schema cache with any overrides we installed
glib-compile-schemas /usr/share/glib-2.0/schemas

mkdir /home/mythtv
chown -R mythtv:mythtv /home/mythtv
#add mythtv account to wheel for sudo
/usr/sbin/usermod -aG wheel mythtv
sed -i "s|.*# %wheel|%wheel|" /etc/sudoers

#set mythtv account to automyth specs
sed -i "s|mythbackend user:/var/lib/mythtv:/sbin/nologin|mythtv:/home/mythtv:/bin/bash|" /etc/passwd
cat >> /etc/sudoers << FOE-SUDOERS
%mythtv ALL=(ALL)	NOPASSWD: ALL
FOE-SUDOERS

#set some custom xterm options
cat >> /home/mythtv/.Xdefaults << FOE-XDEFAULTS
XTerm.vt100.reverseVideo: true
XTerm.vt100.faceName: Liberation Mono:size=10:antialias=false
XTerm.vt100.font: 7x13
XTerm.*scrollBar: true
XTerm.*scrollTtyOutput: false
#XTerm.vt100.geometry: 100x45-0-0
FOE-XDEFAULTS

ln -s /home/mythtv/.Xdefaults /home/mythtv/.Xresources


#setup small font for xdesktop log
mkdir -pv /home/mythtv/.config/xfce4/terminal/
cat > /home/mythtv/.config/xfce4/terminal/terminalrc << FOE
[Configuration]
FontName=Monospace 10
MiscAlwaysShowTabs=FALSE
MiscBell=FALSE
MiscBordersDefault=TRUE
MiscCursorBlinks=FALSE
MiscCursorShape=TERMINAL_CURSOR_SHAPE_BLOCK
MiscDefaultGeometry=80x24
MiscInheritGeometry=FALSE
MiscMenubarDefault=TRUE
MiscMouseAutohide=FALSE
MiscToolbarDefault=FALSE
MiscConfirmClose=TRUE
MiscCycleTabs=TRUE
MiscTabCloseButtons=TRUE
MiscTabCloseMiddleClick=TRUE
MiscTabPosition=GTK_POS_TOP
MiscHighlightUrls=TRUE
FOE

#ICEWM
mkdir /home/mythtv/.icewm
#remove theme with broken config
rm -rf /usr/share/icewm/themes/Infa*
#setup menu bases
cp -av /usr/share/icewm/preferences /home/mythtv/.icewm/
cp -av /usr/share/icewm/themes /home/mythtv/.icewm

# create .xinit for icewm startup session
cat > /home/mythtv/.xinitrc << FOE-XINITRC
exec icewm-session
FOE-XINITRC

#copy conky config over to mythtv
#other users have it installed on account creation 
cp -avf /etc/skel/.conkyrc /home/mythtv/
chown mythtv. /home/mythtv/.conkyrc


# turn off gdm and turn on lightdm
systemctl --no-reload disable gdm.service 2> /dev/null || :
systemctl stop gdm.service  2> /dev/null || :
systemctl --no-reload enable lightdm.service 2> /dev/null || :

# set icewm as default session, otherwise login will fail
sed -i 's/^#user-session=.*/user-session=icewm/' /etc/lightdm/lightdm.conf


# disable screensaver locking (#674410)
cat >> /home/mythtv/.xscreensaver << FOE
mode:           off
lock:           False
dpmsEnabled:    True
FOE

# set up lightdm autologin

sed -i 's/^#autologin-user=.*/autologin-user=mythtv/' /etc/lightdm/lightdm.conf
sed -i 's/^#autologin-user-timeout=.*/autologin-user-timeout=0/' /etc/lightdm/lightdm.conf
#sed -i 's/^#show-language-selector=.*/show-language-selector=true/' /etc/lightdm/lightdm-gtk-greeter.conf

# set default session, otherwise login will fail
sed -i 's/^#user-session=.*/user-session=icewm/' /etc/lightdm/lightdm.conf


# set chromium browsers home and startpages 
sed -i 's|"https://start.fedoraproject.org"|"http://localhost/ReadMe.txt"|' /etc/chromium/master_preferences
sed -i 's|"http://tools.google.com/chrome/intl/en/welcome.html"|"http://localhost/phpMyAdmin"|g' /etc/chromium/master_preferences

# make sure to set the right permissions and selinux contexts
chown -R mythtv:mythtv /home/mythtv/
/sbin/restorecon -R /home/mythtv/
/sbin/restorecon -R /mythtv


#add entries for these to their respective rpms as patches or inline to rpm
cat > /etc/sysconfig/desktop <<FOE-DESKTOPFILE
PREFERRED=/usr/bin/icewm-session
DISPLAYMANAGER=/usr/bin/icewm-session
FOE-DESKTOPFILE

#setup icewm startup file
cat > /home/mythtv/.icewm/startup <<\EOF-ICEWM-STARTUP
pgrep -u mythtv -x icewmtray 2> /dev/null
if [ $? -eq 0 ];then
	echo "[icewmtray] already running"
else
	echo "icewm tray not found,starting now."
	icewmtray&
fi

pgrep -u mythtv -x pnmixer 2> /dev/null
if [ $? -eq 0 ];then 
	echo "[pnmixer] already running"
else 
	echo "pnmixer not running,starting now."
	/usr/bin/pnmixer&
fi

pgrep -u mythtv -x xfce4-power-manager 2> /dev/null
	if [ $? -eq 0 ];then 
		echo "[xfce4-power-manager] already running"
	else
		echo "xfce4-power-manager not running, starting now."
		xfce4-power-manager&
	fi

pgrep -u mythtv -x nm-applet 2> /dev/null
	if [ $? -eq 0 ];then 
		echo "[nm-applet] already running"
	else
		echo "nm-applet not running, starting now."
		/usr/bin/nm-applet&
	fi


pgrep -u mythtv -x conky 2> /dev/null
	if [ $? -eq 0 ];then 
		echo "[conky] already running, sending HUP"
		pkill -HUP conky
	else
		echo "conky pid not found,starting now."
		conky -d&
	fi

echo [ICEWM MENU UPDATE]
menu_lastsize=3712
menufile_location=/home/mythtv/.icewm/menu
if [ -e $menufile_location ];then
	menu_fs=`ls -l $menufile_location |awk '{print $5}'`
	if [ $menu_fs -eq $menu_lastsize ];then
		echo "default menu file size exists, appending new menumaker data to end"
		mmaker -t Xterm -ic icewm>>$menufile_location
	elif [ $menu_fs -gt $menu_lastsize ];then
		echo "NOTE: icewm menu file size greater than expected, something has changed, truncating to default menu file size and running menumaker now."
		truncate -s $menu_lastsize $menufile_location
		mmaker -t Xterm -ic icewm>>$menufile_location
	else	
		echo "WARNING: no icewm default menu file found, no action"
	fi
else
	
	echo "WARNING: no icewm default menu file found, no action"
fi
#setup desktop log
pgrep -u mythtv -x xfce4-terminal 2> /dev/null
	if [ $? -eq 0 ];then 
		echo "[xfce4-terminal] already running"
	else
		echo "xfce4-terminal pid not found,starting now."
		xfce4-terminal --display=:0 --geometry 236x12-5+5 --hide-toolbar --hide-menubar --hide-borders -x sudo tail -f /var/log/messages&
	fi
EOF-ICEWM-STARTUP


chown -R mythtv. /home/mythtv/.icewm/startup
chmod +x /home/mythtv/.icewm/startup

#set theme to default
echo 'Theme="icedesert/default.theme"' > /home/mythtv/.icewm/theme

#remove mailbox icon from icewm
sed -i "s|.*TaskBarShowMailboxStatus=1 # 0/1|TaskBarShowMailboxStatus=0 # 0/1|" /home/mythtv/.icewm/preferences
#set bg to black in a few configs
sed -i 's|DesktopBackgroundColor\="rgb:54/7b/ad"|DesktopBackgroundColor\="rgb:00/00/00"|' /home/mythtv/.icewm/themes/clearlooks-2px/default.theme
sed -i 's|DesktopBackgroundColor\="rgb:50/50/78"|DesktopBackgroundColor\="rgb:00/00/00"|' /home/mythtv/.icewm/themes/icedesert/default.theme
sed -i 's|# DesktopBackgroundColor\="rgb:00/20/40"|DesktopBackgroundColor\="rgb:00/00/00"|' /home/mythtv/.icewm/preferences

# set up icewm toolbar
cat > /home/mythtv/.icewm/toolbar << FOE-ICEWM
prog xfce4-terminal /usr/share/icons/gnome/16x16/apps/utilities-terminal.png xfce4-terminal
prog Thunar /usr/share/icons/gnome/16x16/apps/system-file-manager.png Thunar
prog "Web browser" /usr/share/icons/hicolor/22x22/apps/chromium-browser.png chromium-browser
FOE-ICEWM

# set up icewm menu
cat > /home/mythtv/.icewm/menu << FOE-ICEWM-MENU
prog xfce4-terminal /usr/share/icons/gnome/16x16/apps/utilities-terminal.png xfce4-terminal
prog Thunar /usr/share/icons/gnome/16x16/apps/system-file-manager.png Thunar
prog "Web browser" /usr/share/icons/hicolor/22x22/apps/chromium-browser.png chromium-browser
prog scite /usr/share/pixmaps/Sci48M.png scite
prog "hdhomerun_config" /usr/share/icons/hicolor/16x16/hdhr.png hdhomerun_config_gui
separator
menu "MythFrontend" /usr/share/icons/gnome/16x16/apps/utilities-terminal.png {
prog "query-mythfontend.service.status" /usr/share/icons/gnome/16x16/apps/utilities-terminal.png xterm -e 'sudo systemctl status mythfrontend;sleep 15'
prog "enable.mythfrontend.service" /usr/share/icons/gnome/16x16/apps/utilities-terminal.png xterm -e 'sudo systemctl enable mythfrontend;sleep 10'
prog "disable.mythfrontend.service" /usr/share/icons/gnome/16x16/apps/utilities-terminal.png xterm -e 'sudo systemctl disable mythfrontend;sleep 10'
prog "temporary-stop.mythfrontend.service" /usr/share/icons/gnome/16x16/apps/utilities-terminal.png xterm -e 'sudo systemctl stop mythfrontend;sleep 10'
prog "start.mythfrontend.service" /usr/share/icons/gnome/16x16/apps/utilities-terminal.png xterm -e 'sudo systemctl start mythfrontend;sleep 10'
prog "restart.mythfrontend.service" /usr/share/icons/gnome/16x16/apps/utilities-terminal.png xterm -e 'sudo systemctl restart mythfrontend;sleep 10'
}
menu "mythbackend service" /usr/share/icons/gnome/16x16/apps/utilities-terminal.png {
prog "query-mythbackend.service.status" /usr/share/icons/gnome/16x16/apps/utilities-terminal.png xterm -e 'sudo systemctl status mythbackend;sleep 15'
prog "enable.mythbackend.service" /usr/share/icons/gnome/16x16/apps/utilities-terminal.png xterm -e 'sudo systemctl enable mythbackend;sleep 10'
prog "disable.mythbackend.service" /usr/share/icons/gnome/16x16/apps/utilities-terminal.png xterm -e 'sudo systemctl disable mythbackend;sleep 10'
prog "temporary-stop.mythbackend.service" /usr/share/icons/gnome/16x16/apps/utilities-terminal.png xterm -e 'sudo systemctl stop mythbackend;sleep 10'
prog "start.mythbackend.service" /usr/share/icons/gnome/16x16/apps/utilities-terminal.png xterm -e 'sudo systemctl start mythbackend;sleep 10'
prog "restart.mythbackend.service" /usr/share/icons/gnome/16x16/apps/utilities-terminal.png xterm -e 'sudo systemctl restart mythbackend;sleep 15'
}
menu "DataBase service" /usr/share/icons/gnome/16x16/apps/utilities-terminal.png {
prog "querydb.service.status" /usr/share/icons/gnome/16x16/apps/utilities-terminal.png xterm -e 'sudo systemctl status mariadb;sleep 15'
prog "enable.database.service" /usr/share/icons/gnome/16x16/apps/utilities-terminal.png xterm -e 'sudo systemctl enable mariadb;sleep 10'
prog "disable.database.service" /usr/share/icons/gnome/16x16/apps/utilities-terminal.png xterm -e 'sudo systemctl disable mariadb;sleep 10'
prog "temporary-stop.database.service" /usr/share/icons/gnome/16x16/apps/utilities-terminal.png xterm -e 'sudo systemctl stop mariadb;sleep 10'
prog "start.database.service" /usr/share/icons/gnome/16x16/apps/utilities-terminal.png xterm -e 'sudo systemctl start mariadb;sleep 10'
prog "restart.database.service" /usr/share/icons/gnome/16x16/apps/utilities-terminal.png xterm -e 'sudo systemctl restart mariadb;sleep 15'
}
separator
menu "Power Options" /usr/share/icons/HighContrast/16x16/apps/utilities-terminal.png {
prog Poweroff /usr/share/icons/Adwaita/16x16/actions/system-shutdown-symbolic.symbolic.png  sudo poweroff
separator
prog Reboot reboot sudo reboot
separator
prog suspend-to-idle - sudo echo freeze > /sys/power/state
prog suspend-to-memory - sudo echo mem > /sys/power/state
prog suspend-to-disk - sudo echo disk > /sys/power/state
separator
}
FOE-ICEWM-MENU
#setup mythtv confdir to mythtv
rm -rfv /etc/mythtv
mkdir /home/mythtv/.mythtv
ln -s /home/mythtv/.mythtv /etc/mythtv
#setup a config till new rpm
cat > /home/mythtv/.mythtv/config.xml<< FOE
<Configuration>
  <LocalHostName></LocalHostName>
  <Database>
    <PingHost>1</PingHost>
    <Host>automythsvr-g36fe0ce</Host>
    <UserName>mythtv</UserName>
    <Password>mythtv</Password>
    <DatabaseName>mythconverg</DatabaseName>
    <Port>3306</Port>
  </Database>
  <WakeOnLAN>
    <Enabled>0</Enabled>
    <SQLReconnectWaitTime>0</SQLReconnectWaitTime>
    <SQLConnectRetry>5</SQLConnectRetry>
    <Command>echo 'WOLsqlServerCommand not set'</Command>
  </WakeOnLAN>
  <UPnP>
    <UDN>
      <MediaRenderer></MediaRenderer>
    </UDN>
  </UPnP>
</Configuration>
FOE




cat > /etc/modules-load.d/bonding.conf<< FOE
bonding
FOE

cat > /etc/sysconfig/network-scripts/ifcfg-bond0<< FOE
DEVICE=bond0
TYPE=bond
BOOTPROTO=dhcp
ONBOOT=yes
NM_CONTROLLED=no
DHCP_HOSTNAME=automythsvr-g36fe0ce
ZONE=public
FOE

cat > /etc/sysconfig/network-scripts/ifcfg-eth0<< FOE
DEVICE=eth0
ONBOOT=yes
NM_CONTROLLED=no
MASTER=bond0
SLAVE=yes
FOE

cat > /etc/sysconfig/network-scripts/ifcfg-eth1<< FOE
DEVICE=eth1
ONBOOT=yes
NM_CONTROLLED=no
MASTER=bond0
SLAVE=yes
FOE

cat > /etc/sysconfig/network-scripts/ifcfg-eth2<< FOE
DEVICE=eth2
ONBOOT=yes
NM_CONTROLLED=no
MASTER=bond0
SLAVE=yes
FOE

cat > /etc/sysconfig/network-scripts/ifcfg-eth3<< FOE
DEVICE=eth3
ONBOOT=yes
NM_CONTROLLED=no
MASTER=bond0
SLAVE=yes
FOE


#create a static udev rule to redirect ath0 to wlan0, if needed
#hostap device
cat > /etc/sysconfig/network-scripts/ifcfg-wlan0<< FOE
DEVICE=wlan0
ONBOOT=no
BOOTPROTO=none
IPADDR=10.10.1.1
NETMASK=255.255.255.0
NM_CONTROLLED=no
FOE

chkconfig network on> /dev/null || :
#service network start> /dev/null || :

#enable ntpd service
systemctl enable ntpd.service 2> /dev/null || :

#enable db service
systemctl enable mariadb.service 2> /dev/null || :
systemctl start mariadb.service 2> /dev/null || :


#enable httpd service
systemctl enable httpd.service 2> /dev/null || :

#comment httpd welcome.conf
sed -i 's/\(.*\)/#\1/g' /etc/httpd/conf.d/welcome.conf
#uncomment welcome.conf

#dvbdate set date for ntp based on results

#adds *.devices to db and connects inputs
#dvbfrontend0 or hdhr found and set as static in db and input connected

cat > /etc/hostapd/hostapd.conf <<EOF_HOSTAPD
# A complete, well commented example configuration f$ile is
# available here:
#
#       /usr/share/doc/hostapd/hostapd.conf
#
# For more information, look here:
#
#       http://wireless.kernel.org/en/users/Documentation/hostapd
#
ctrl_interface=/var/run/hostapd
ctrl_interface_group=wheel

# Some usable default settings...
macaddr_acl=0
auth_algs=1
ignore_broadcast_ssid=0

# Uncomment these for base WPA & WPA2 support with a pre-shared key
wpa=3
wpa_key_mgmt=WPA-PSK
wpa_pairwise=TKIP
rsn_pairwise=CCMP

# Most modern wireless drivers in the kernel need driver=nl80211
driver=nl80211
ieee80211n=1
ht_capab=[HT40+][SHORT-GI-40][DSSS_CCK-40]
# Customize these for your local configuration...
interface=wlan0
hw_mode=g
channel=7
ssid=amsvr-g36fe0ce

EOF_HOSTAPD


#include the source/scripts in the install image
cd /var/www/html
mkdir AutoMyth-Server-7.4;cd AutoMyth-Server-7.4
wget http://127.0.0.1/AutoMyth-Server-7.4/readmeChangelog.txt >/dev/null
wget http://127.0.0.1/AutoMyth-Server-7.4/ReadMe.txt >/dev/null
wget http://127.0.0.1/AutoMyth-Server-7.4/automythsvr-hdhr-eit-0.28.1-62-g36fe0.cfg >/dev/null
wget http://127.0.0.1/AutoMyth-Server-7.4/createNewAutoMythSvrHdHrEitImage.sh >/dev/null
ln -s /var/www/html/AutoMyth-Server-7.4/ReadMe.txt /var/www/html/
ln -s /var/www/html/AutoMyth-Server-7.4 /home/mythtv
wget --cut-dirs=2 --no-parent --no-host-directories --reject=ISOS* --reject=index.html* --mirror http://127.0.0.1/AutoMyth-Server-7.4/automyth_repo/Server  >/dev/null


passwd -d root> /dev/null
passwd -d mythtv > /dev/null
chown -R mythtv. /home/mythtv /myth

#use to reset network cards to the preferred method, remove ifname= from grub/kernel stanzas
#liveinst clean self remove utils /scripts
cat > /root/.clean_after_liveinst.sh <<EOF-CLEANLIVEINST
#!/bin/bash
if [ ! -e /dev/mapper/live-rw ];then
	mkdir /root/LIVESYS_NEEDS_RPM/
	chkconfig --del livesys
	chkconfig --del livesys-late
	mv /etc/rc.d/init.d/livesys* /root/LIVESYS_NEEDS_RPM/
	rpm -qa|grep anaconda|xargs rpm -e
		#not working, being evaluated too early in live session, need to only eval in real session
		if [ -s /etc/machine-id ];then
			echo "wpa_password=$(cat /etc/machine-id |sha512sum|cut -c30-50)" >> /etc/hostapd/hostapd.conf			
		fi
	sed -i '/ConditionPathExists\=\/home\/mythtv\/STAGE3.INSTALLED/d' /usr/lib/systemd/system/mythbackend.service
	#re-enable new networking if no ap capable wifi adapter
	#if some check...sed -i 's/net.ifnames=0 biosdevname=0/' '/' /etc/default/grub
	#grub2-mkconfig -o /boot/grub2/grub.cfg
	#if [ -e /etc/sysconfig/network-scripts/ifcfg-en* ];then
        #	rm -rvf /etc/sysconfig/network-scripts/ifcfg-en*
	#fi
	#
	#if [ -d /boot/efi/EFI/redhat ]; then
	#grub2-mkconfig -o /boot/efi/EFI/redhat/grub.cfg
	#fi
	rm -rfv /var/spool/cron/root
	rm -rfv $0
fi
EOF-CLEANLIVEINST
chmod +x /root/.clean_after_liveinst.sh
#setup the cron job to exec it
cat >/var/spool/cron/root<<EOF-ROOTCRON
@reboot     /root/.clean_after_liveinst.sh
EOF-ROOTCRON
%end


%post --nochroot --log=/mnt/sysimage/root/kickstart-post-nochroot.log
cp $INSTALL_ROOT/usr/share/doc/*-release-*/GPL $LIVE_ROOT/GPL
# only works on x86, x86_64, needs syslinux-extlinux
if [ "$(uname -i)" = "i386" -o "$(uname -i)" = "x86_64" ]; then
  if [ ! -d $LIVE_ROOT/LiveOS ]; then mkdir -p $LIVE_ROOT/LiveOS ; fi
  cp /usr/bin/livecd-iso-to-disk $LIVE_ROOT/LiveOS
fi
%end
